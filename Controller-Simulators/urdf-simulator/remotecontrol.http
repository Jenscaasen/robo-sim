# VS Code REST Client file for PyBullet HTTP control
# Requires the PyBullet viewer running with HTTP enabled (default):
#   .venv/bin/python scripts/PybulletViewer.py --gui --urdf urdf/five_dof_arm.urdf
#
# Tips:
# - Adjust @host and @port if you started the viewer with different values.
# - Check /api/joints first to confirm joint indices before setting targets.
# - Values are clamped to joint limits when available.

@host=127.0.0.1
@port=5000

# Default parameters for convenience (edit these for quick testing)
@joint_id=1
@value=1.2

###
# @name health
GET http://{{host}}:{{port}}/api/health
Accept: application/json

###
# @name joints
GET http://{{host}}:{{port}}/api/joints
Accept: application/json

###
# @name setJoint
# Set a single joint (using variables above)
GET http://{{host}}:{{port}}/api/joint/{{joint_id}}/{{value}}
Accept: application/json

###
# @name setMultipleJoints_fast_example
# Example: Move multiple joints simultaneously in fast mode
POST http://{{host}}:{{port}}/api/joints/fast
Content-Type: application/json
Accept: application/json

[
  {"id": 0, "pos": 0},
  {"id": 1, "pos": 1.2},
  {"id": 2, "pos": 0}
]

###
# @name setMultipleJoints_neutral_pose_fast
# Example: Set all joints to neutral pose simultaneously
POST http://{{host}}:{{port}}/api/joints/instant
Content-Type: application/json
Accept: application/json

[
  {"id": 0, "pos": 0.0},
  {"id": 1, "pos": 0.0},
  {"id": 2, "pos": 0.0},
  {"id": 3, "pos": 0.0},
  {"id": 4, "pos": 0.0}
]

###
# @name setMultipleJoints_reach_pose_fast
# Example: Set reach forward pose simultaneously
POST http://{{host}}:{{port}}/api/joints/instant
Content-Type: application/json
Accept: application/json

[
  {"id": 0, "pos": 0.1},
  {"id": 1, "pos": 0.8},
  {"id": 2, "pos": 0.8},
  {"id": 3, "pos": 0.2},
  {"id": 4, "pos": 0.0}
]

###
# @name reset_all_joints_instant
# Reset all joints to neutral position (0.0) instantly
GET http://{{host}}:{{port}}/api/reset/instant
Accept: application/json

###
# @name camera1
# Get top view camera image
GET http://{{host}}:{{port}}/api/camera/1
Accept: image/jpeg

###
# @name camera2
# Get side view camera image
GET http://{{host}}:{{port}}/api/camera/2
Accept: image/jpeg

###
# @name camera3
# Get front-left angled camera image
GET http://{{host}}:{{port}}/api/camera/3
Accept: image/jpeg
